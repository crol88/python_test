{"name": "Выбрать и сохранить значение поля 'Откуда узнали'", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=110.0.5481.177)\nStacktrace:\n#0 0x55f518f40d93 <unknown>\n#1 0x55f518d0f15d <unknown>\n#2 0x55f518d4cd3c <unknown>\n#3 0x55f518d40ff5 <unknown>\n#4 0x55f518d6f5f2 <unknown>\n#5 0x55f518d40873 <unknown>\n#6 0x55f518d6f81e <unknown>\n#7 0x55f518d87619 <unknown>\n#8 0x55f518d6f353 <unknown>\n#9 0x55f518d3ee40 <unknown>\n#10 0x55f518d40038 <unknown>\n#11 0x55f518f948be <unknown>\n#12 0x55f518f988f0 <unknown>\n#13 0x55f518f78f90 <unknown>\n#14 0x55f518f99b7d <unknown>\n#15 0x55f518f6a578 <unknown>\n#16 0x55f518fbe348 <unknown>\n#17 0x55f518fbe4d6 <unknown>\n#18 0x55f518fd8341 <unknown>\n#19 0x7f515e317609 start_thread", "trace": "app = <fixture.application.Application object at 0x000001A9482A7790>\n\n>   ???\n\nC:\\Devel\\python_test\\test\\test_client_info\\test_edit_additional_Info.py:87: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\fixture\\client_infocard\\information.py:163: in edit_fromwhere\n    self.error_trapping()\n..\\..\\fixture\\client_infocard\\information.py:96: in error_trapping\n    wd.find_element(By.XPATH, \"//*[@class='sweet-confirm styled']\").click()\n..\\..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n..\\..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:410: in _execute\n    return self._parent.execute(command, params)\n..\\..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:444: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001A9482A76D0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...wn>\\\\n#17 0x55f518fbe4d6 \\\\u003Cunknown>\\\\n#18 0x55f518fd8341 \\\\u003Cunknown>\\\\n#19 0x7f515e317609 start_thread\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = \"{}.{}\".format(frame[\"className\"], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: chrome=110.0.5481.177)\nE       Stacktrace:\nE       #0 0x55f518f40d93 <unknown>\nE       #1 0x55f518d0f15d <unknown>\nE       #2 0x55f518d4cd3c <unknown>\nE       #3 0x55f518d40ff5 <unknown>\nE       #4 0x55f518d6f5f2 <unknown>\nE       #5 0x55f518d40873 <unknown>\nE       #6 0x55f518d6f81e <unknown>\nE       #7 0x55f518d87619 <unknown>\nE       #8 0x55f518d6f353 <unknown>\nE       #9 0x55f518d3ee40 <unknown>\nE       #10 0x55f518d40038 <unknown>\nE       #11 0x55f518f948be <unknown>\nE       #12 0x55f518f988f0 <unknown>\nE       #13 0x55f518f78f90 <unknown>\nE       #14 0x55f518f99b7d <unknown>\nE       #15 0x55f518f6a578 <unknown>\nE       #16 0x55f518fbe348 <unknown>\nE       #17 0x55f518fbe4d6 <unknown>\nE       #18 0x55f518fd8341 <unknown>\nE       #19 0x7f515e317609 start_thread\n\n..\\..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:249: ElementNotInteractableException"}, "steps": [{"name": "Поиск пациента", "status": "passed", "steps": [{"name": "Нажать 'Поиск по пациентам'", "status": "passed", "start": 1680160749436, "stop": 1680160749553}, {"name": "Ввести фамилию SURNAME в поле ввода", "status": "passed", "start": 1680160749553, "stop": 1680160749725}, {"name": "Нажать 'ENTER'", "status": "passed", "start": 1680160751733, "stop": 1680160751852}], "parameters": [{"name": "search_name", "value": "'SURNAME'"}], "start": 1680160747288, "stop": 1680160753857}, {"name": "Редактировать поле 'Откуда узнали'", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=110.0.5481.177)\nStacktrace:\n#0 0x55f518f40d93 <unknown>\n#1 0x55f518d0f15d <unknown>\n#2 0x55f518d4cd3c <unknown>\n#3 0x55f518d40ff5 <unknown>\n#4 0x55f518d6f5f2 <unknown>\n#5 0x55f518d40873 <unknown>\n#6 0x55f518d6f81e <unknown>\n#7 0x55f518d87619 <unknown>\n#8 0x55f518d6f353 <unknown>\n#9 0x55f518d3ee40 <unknown>\n#10 0x55f518d40038 <unknown>\n#11 0x55f518f948be <unknown>\n#12 0x55f518f988f0 <unknown>\n#13 0x55f518f78f90 <unknown>\n#14 0x55f518f99b7d <unknown>\n#15 0x55f518f6a578 <unknown>\n#16 0x55f518fbe348 <unknown>\n#17 0x55f518fbe4d6 <unknown>\n#18 0x55f518fd8341 <unknown>\n#19 0x7f515e317609 start_thread\n\n", "trace": "  File \"C:\\Devel\\python_test\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"C:\\Devel\\python_test\\fixture\\client_infocard\\information.py\", line 163, in edit_fromwhere\n    self.error_trapping()\n  File \"C:\\Devel\\python_test\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"C:\\Devel\\python_test\\fixture\\client_infocard\\information.py\", line 96, in error_trapping\n    wd.find_element(By.XPATH, \"//*[@class='sweet-confirm styled']\").click()\n  File \"C:\\Devel\\python_test\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"C:\\Devel\\python_test\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 410, in _execute\n    return self._parent.execute(command, params)\n  File \"C:\\Devel\\python_test\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 444, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Devel\\python_test\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 249, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "steps": [{"name": "Открыть дополнительную информацию", "status": "passed", "steps": [{"name": "Закрыть основную информацию", "status": "passed", "start": 1680160753857, "stop": 1680160754022}, {"name": "Открыть дополнительную информацию", "status": "passed", "start": 1680160755033, "stop": 1680160755161}], "start": 1680160753857, "stop": 1680160755161}, {"name": "Нажать кнопку редактировать", "status": "passed", "start": 1680160757255, "stop": 1680160757493}, {"name": "В выпадающем списке выбрать значение: 2ГИС", "status": "passed", "start": 1680160757718, "stop": 1680160758086}, {"name": "Нажать кнопку 'Сохранить'", "status": "passed", "start": 1680160758086, "stop": 1680160758211}, {"name": "Проверка на ошибки", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=110.0.5481.177)\nStacktrace:\n#0 0x55f518f40d93 <unknown>\n#1 0x55f518d0f15d <unknown>\n#2 0x55f518d4cd3c <unknown>\n#3 0x55f518d40ff5 <unknown>\n#4 0x55f518d6f5f2 <unknown>\n#5 0x55f518d40873 <unknown>\n#6 0x55f518d6f81e <unknown>\n#7 0x55f518d87619 <unknown>\n#8 0x55f518d6f353 <unknown>\n#9 0x55f518d3ee40 <unknown>\n#10 0x55f518d40038 <unknown>\n#11 0x55f518f948be <unknown>\n#12 0x55f518f988f0 <unknown>\n#13 0x55f518f78f90 <unknown>\n#14 0x55f518f99b7d <unknown>\n#15 0x55f518f6a578 <unknown>\n#16 0x55f518fbe348 <unknown>\n#17 0x55f518fbe4d6 <unknown>\n#18 0x55f518fd8341 <unknown>\n#19 0x7f515e317609 start_thread\n\n", "trace": "  File \"C:\\Devel\\python_test\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"C:\\Devel\\python_test\\fixture\\client_infocard\\information.py\", line 96, in error_trapping\n    wd.find_element(By.XPATH, \"//*[@class='sweet-confirm styled']\").click()\n  File \"C:\\Devel\\python_test\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"C:\\Devel\\python_test\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 410, in _execute\n    return self._parent.execute(command, params)\n  File \"C:\\Devel\\python_test\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 444, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Devel\\python_test\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 249, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1680160758211, "stop": 1680160763452}], "start": 1680160753857, "stop": 1680160763454}], "attachments": [{"name": "stdout", "source": "ea66f497-3177-4aa7-908e-293dcc85055b-attachment.txt", "type": "text/plain"}], "start": 1680160740974, "stop": 1680160763455, "uuid": "f546b31b-5b28-4eeb-a6ca-a37953a538f2", "historyId": "8061cd34719a493d15d05125774e98f9", "testCaseId": "59f909464d85878fe9d2b031f25b6506", "fullName": "tests.test_client_info.test_edit_additional_Info#test_edit_fromwhere", "labels": [{"name": "tag", "value": "Инфокарта пациента"}, {"name": "epic", "value": "Информация о пациенте. Дополнительная информация"}, {"name": "parentSuite", "value": "tests.test_client_info"}, {"name": "suite", "value": "test_edit_additional_Info"}, {"name": "host", "value": "DESKTOP-AL4I8MH"}, {"name": "thread", "value": "1348-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_client_info.test_edit_additional_Info"}]}